name: Update API Documentation

on:
  push:
    branches: [main, ai]
    paths:
      - 'src/**/*.ts'
      - 'typedoc.json'
      - 'package.json'
  pull_request:
    branches: [main]
    paths:
      - 'src/**/*.ts'
      - 'typedoc.json'

jobs:
  update-docs:
    name: Generate and Update API Documentation
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install Dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          yarn install --frozen-lockfile

      - name: Generate API Documentation
        run: |
          echo "üìö Generating API documentation with TypeDoc..."
          yarn docs:generate

      - name: Check for Documentation Changes
        id: check-changes
        run: |
          if [ -n "$(git status --porcelain docs/api/)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "üìù Documentation changes detected"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "‚úÖ No documentation changes"
          fi

      - name: Commit Documentation Updates
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'push'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add docs/api/
          git commit -m "docs: Auto-update API documentation from TypeScript comments

          ü§ñ Generated with TypeDoc from latest source code changes

          Updated modules:
          $(git diff --name-only HEAD~1 src/ | grep '\.ts$' | head -5 | sed 's/^/- /')

          Co-Authored-By: GitHub Actions <action@github.com>"

      - name: Push Documentation Changes
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'push'
        run: |
          git push origin ${{ github.ref_name }}

      - name: Comment on PR with Documentation Preview
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const { readdir, readFile } = require('fs').promises;
            const path = require('path');

            // Get list of generated documentation files
            const apiDocsPath = 'docs/api';

            let comment = `## üìö API Documentation Updated\n\n`;
            comment += `TypeDoc has generated updated API documentation from the changes in this PR.\n\n`;
            comment += `### Generated Documentation Structure:\n`;
            comment += `- \`docs/api/\` - Complete API reference\n`;
            comment += `- Module-specific documentation for each updated TypeScript file\n`;
            comment += `- Interface and class documentation with JSDoc comments\n\n`;
            comment += `The documentation will be automatically committed when this PR is merged.\n\n`;
            comment += `ü§ñ *This comment was automatically generated by the documentation workflow.*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Upload Documentation Artifacts
        if: steps.check-changes.outputs.changes == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: api-documentation
          path: docs/api/
          retention-days: 30

  validate-docs:
    name: Validate Documentation Quality
    runs-on: ubuntu-latest
    needs: update-docs

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Download Documentation
        uses: actions/download-artifact@v4
        with:
          name: api-documentation
          path: docs/api/

      - name: Validate Documentation Links
        run: |
          echo "üîç Validating documentation links..."
          if command -v markdown-link-check &> /dev/null; then
            find docs/api -name "*.md" -exec markdown-link-check {} \;
          else
            echo "‚ö†Ô∏è markdown-link-check not available, skipping link validation"
          fi

      - name: Check Documentation Coverage
        run: |
          echo "üìä Checking documentation coverage..."
          # Count TypeScript files vs documented files
          TS_FILES=$(find src -name "*.ts" -not -path "*/test*" | wc -l)
          DOC_FILES=$(find docs/api -name "*.md" | wc -l)

          echo "TypeScript files: $TS_FILES"
          echo "Documentation files: $DOC_FILES"

          if [ $DOC_FILES -lt $((TS_FILES / 2)) ]; then
            echo "‚ö†Ô∏è Documentation coverage seems low"
          else
            echo "‚úÖ Good documentation coverage"
          fi