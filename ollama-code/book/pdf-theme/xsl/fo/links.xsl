<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:e="pdf-theme" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" xmlns:opentopic-func="http://www.idiominc.com/opentopic/exsl/function" xmlns:opentopic="http://www.idiominc.com/opentopic" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0" exclude-result-prefixes="xs e dita-ot ditaarch opentopic opentopic-func"><!--Link--><xsl:template match="*[contains(@class,' topic/xref ')][not(@type = 'fn')]" name="topic.xref"><xsl:variable name="destination" select="opentopic-func:getDestinationId(@href)"/><xsl:variable name="element" select="key('key_anchor',$destination)[1]"/><xsl:variable name="referenceTitle" as="node()*"><xsl:apply-templates select="." mode="insertReferenceTitle"><xsl:with-param name="href" select="@href"/><xsl:with-param name="titlePrefix" select="''"/><xsl:with-param name="destination" select="$destination"/><xsl:with-param name="element" select="$element"/></xsl:apply-templates></xsl:variable><fo:basic-link xsl:use-attribute-sets="xref"><xsl:call-template name="commonattributes"/><xsl:call-template name="buildBasicLinkDestination"><xsl:with-param name="scope" select="@scope"/><xsl:with-param name="format" select="@format"/><xsl:with-param name="href" select="@href"/></xsl:call-template><xsl:choose><xsl:when test="not(@scope = 'external' or @format = 'html')"><xsl:choose><xsl:when test="exists($referenceTitle) and exists(processing-instruction('ditaot')[. = 'usertext'])"><xsl:copy-of select="$referenceTitle"/></xsl:when><xsl:when test="exists($referenceTitle)"><xsl:call-template name="e:insertPageNumberCitation"><xsl:with-param name="referenceTitle" select="$referenceTitle"/><xsl:with-param name="isTitleEmpty" select="false()"/><xsl:with-param name="destination" select="$destination"/><xsl:with-param name="element" select="$element"/></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="e:insertPageNumberCitation"><xsl:with-param name="isTitleEmpty" select="true()"/><xsl:with-param name="destination" select="$destination"/><xsl:with-param name="element" select="$element"/></xsl:call-template></xsl:otherwise></xsl:choose></xsl:when><xsl:otherwise><xsl:choose><xsl:when test="exists(*[not(contains(@class,' topic/desc '))] | text()) and                                  exists(processing-instruction('ditaot')[. = 'usertext'])"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'link-external'"/><xsl:with-param name="params"><link-text><xsl:apply-templates select="*[not(contains(@class,' topic/desc '))] | text()"/></link-text><url><xsl:value-of select="e:format-link-url(@href)"/></url></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise><xsl:value-of select="e:format-link-url(@href)"/></xsl:otherwise></xsl:choose></xsl:otherwise></xsl:choose></fo:basic-link></xsl:template><xsl:template match="*[contains(@class,' topic/link ')][not(empty(@href) or @href = '')]" mode="processLink"><xsl:variable name="destination" select="opentopic-func:getDestinationId(@href)"/><xsl:variable name="element" select="key('key_anchor',$destination, $root)[1]" as="element()?"/><xsl:variable name="referenceTitle" as="node()*"><xsl:apply-templates select="." mode="insertReferenceTitle"><xsl:with-param name="href" select="@href"/><xsl:with-param name="titlePrefix" select="''"/><xsl:with-param name="destination" select="$destination"/><xsl:with-param name="element" select="$element"/></xsl:apply-templates></xsl:variable><xsl:variable name="linkScope" as="xs:string"><xsl:call-template name="getLinkScope"/></xsl:variable><fo:block xsl:use-attribute-sets="link"><fo:basic-link xsl:use-attribute-sets="link__content"><xsl:call-template name="buildBasicLinkDestination"><xsl:with-param name="scope" select="$linkScope"/><xsl:with-param name="href" select="@href"/></xsl:call-template><xsl:choose><xsl:when test="not($linkScope = 'external') and exists($referenceTitle)"><xsl:call-template name="e:insertPageNumberCitation"><xsl:with-param name="referenceTitle" select="$referenceTitle"/><xsl:with-param name="isTitleEmpty" select="false()"/><xsl:with-param name="destination" select="$destination"/><xsl:with-param name="element" select="$element"/></xsl:call-template></xsl:when><xsl:when test="not($linkScope = 'external')"><xsl:call-template name="e:insertPageNumberCitation"><xsl:with-param name="isTitleEmpty" select="true()"/><xsl:with-param name="destination" select="$destination"/><xsl:with-param name="element" select="$element"/></xsl:call-template></xsl:when><xsl:when test="*[contains(@class, ' topic/linktext ')]"><xsl:apply-templates select="*[contains(@class, ' topic/linktext ')]"/></xsl:when><xsl:otherwise><xsl:value-of select="e:format-link-url(@href)"/></xsl:otherwise></xsl:choose></fo:basic-link><xsl:call-template name="insertLinkShortDesc"><xsl:with-param name="destination" select="$destination"/><xsl:with-param name="element" select="$element"/><xsl:with-param name="linkScope" select="$linkScope"/></xsl:call-template></fo:block></xsl:template><xsl:template match="*[contains(@class, ' topic/topic ')]" mode="retrieveReferenceTitle"><xsl:variable name="contents" as="node()*" select="e:get-title-number(.)"/><xsl:if test="exists($contents)"><xsl:variable name="topicref" select="key('map-id', @id)" as="element()?"/><xsl:variable name="variable-id" as="xs:string?"><xsl:choose><xsl:when test="$topicref/self::*[contains(@class, ' bookmap/chapter ')]">Chapter with number</xsl:when><xsl:when test="$topicref/self::*[contains(@class, ' bookmap/part ')]">Part with number</xsl:when><xsl:when test="$topicref/self::*[contains(@class, ' bookmap/appendix ')]">Appendix with number</xsl:when></xsl:choose></xsl:variable><xsl:choose><xsl:when test="exists($variable-id)"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="$variable-id"/><xsl:with-param name="params"><number><xsl:copy-of select="$contents"/></number></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise><xsl:copy-of select="$contents"/></xsl:otherwise></xsl:choose><xsl:text> </xsl:text></xsl:if><xsl:apply-templates select="*[contains(@class, ' topic/title ')]/node()"/></xsl:template><xsl:function name="e:format-link-url"><xsl:param name="href"/><xsl:variable name="h" select="if (starts-with($href, 'http://')) then substring($href, 8) else $href"/><xsl:value-of select="if (contains($h, '/') and substring-after($h, '/') = '') then substring($h, 0, string-length($h)) else $h"/></xsl:function><xsl:template name="e:insertPageNumberCitation"><xsl:param name="referenceTitle" as="node()*"/><xsl:param name="isTitleEmpty" as="xs:boolean" select="false()"/><xsl:param name="destination" as="xs:string"/><xsl:param name="element" as="element()?"/><xsl:choose><xsl:when test="not($element) or ($destination = '')"/><xsl:when test="$isTitleEmpty"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'Page'"/><xsl:with-param name="params"><pagenum><fo:page-number-citation ref-id="{$destination}"/></pagenum></xsl:with-param></xsl:call-template></xsl:when><xsl:otherwise><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'link-local'"/><xsl:with-param name="params"><link-text><xsl:copy-of select="$referenceTitle"/></link-text><pagenum><fo:page-number-citation ref-id="{$destination}"/></pagenum></xsl:with-param></xsl:call-template></xsl:otherwise></xsl:choose></xsl:template><xsl:template name="insertLinkShortDesc"><xsl:param name="destination"/><xsl:param name="element"/><xsl:param name="linkScope"/><xsl:choose><xsl:when test="*[contains(@class, ' topic/desc ')] and                             processing-instruction()[name() = 'ditaot'][. = 'usershortdesc']"><fo:block xsl:use-attribute-sets="link__shortdesc"><xsl:apply-templates select="*[contains(@class, ' topic/desc ')]"/></fo:block></xsl:when><xsl:when test="$linkScope = 'external'"/><xsl:when test="$element/*[contains(@class, ' topic/shortdesc ')]"><xsl:variable name="generatedShortdesc" as="node()*"><xsl:apply-templates select="$element/*[contains(@class, ' topic/shortdesc ')]/node()"/></xsl:variable><fo:block xsl:use-attribute-sets="link__shortdesc"><xsl:apply-templates select="$generatedShortdesc" mode="dropCopiedIds"/></fo:block></xsl:when></xsl:choose></xsl:template></xsl:stylesheet>