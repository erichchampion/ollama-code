<?xml version="1.0" encoding="UTF-8"?><xsl:stylesheet xmlns:dita-ot="http://dita-ot.sourceforge.net/ns/201007/dita-ot" xmlns:ditaarch="http://dita.oasis-open.org/architecture/2005/" xmlns:e="pdf-theme" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" xmlns:opentopic-func="http://www.idiominc.com/opentopic/exsl/function" xmlns:opentopic="http://www.idiominc.com/opentopic" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0" exclude-result-prefixes="xs e dita-ot ditaarch opentopic opentopic-func"><xsl:variable name="e:number-levels" select="(false(), false(), false(), false(), false(), false())"/><xsl:template match="*[contains(@class, ' topic/topic ')]/*[contains(@class, ' topic/title ')]" mode="getTitle"><xsl:variable name="topic" select="ancestor-or-self::*[contains(@class, ' topic/topic ')][1]"/><xsl:variable name="contents" as="node()*" select="e:get-title-number($topic)"/><xsl:if test="exists($contents)"><xsl:copy-of select="$contents"/><xsl:text> </xsl:text></xsl:if><xsl:apply-templates/></xsl:template><xsl:function name="e:get-title-number" as="node()*"><xsl:param name="topic" as="element()"/><xsl:variable name="topicref" as="element()*" select="key('map-id', $topic/@id, root($topic))"/><xsl:apply-templates select="$topicref[1]" mode="e:title-number"/></xsl:function><xsl:template match="*[contains(@class, ' map/topicref')]" mode="e:title-number"><xsl:variable name="depth" select="count(ancestor-or-self::*[contains(@class, ' map/topicref')])"/><xsl:choose><xsl:when test="parent::opentopic:map and contains(@class, ' bookmap/bookmap ')"/><xsl:when test="ancestor-or-self::*[contains(@class, ' bookmap/frontmatter ') or                                             contains(@class, ' bookmap/backmatter ')]"/><xsl:when test="ancestor-or-self::*[contains(@class, ' bookmap/appendix ')] and                         $e:number-levels[$depth]"><xsl:number count="*[contains(@class, ' map/topicref ')]                               [ancestor-or-self::*[contains(@class, ' bookmap/appendix ')]]" level="multiple" format="A.1.1"/></xsl:when><xsl:when test="self::*[contains(@class, ' bookmap/part ')]"/><xsl:when test="$e:number-levels[$depth]"><xsl:number count="*[contains(@class, ' map/topicref ')]                               [not(ancestor-or-self::*[contains(@class, ' bookmap/frontmatter ')])]" level="multiple" format="1.1"/></xsl:when></xsl:choose></xsl:template><xsl:template match="*[contains(@class, ' map/topicref')]" mode="e:chapter-number"><xsl:variable name="depth" select="count(ancestor-or-self::*[contains(@class, ' map/topicref')])"/><xsl:choose><xsl:when test="parent::opentopic:map and contains(@class, ' bookmap/bookmap ')"/><xsl:when test="ancestor-or-self::*[contains(@class, ' bookmap/frontmatter ') or                                             contains(@class, ' bookmap/backmatter ')]"/><xsl:when test="ancestor-or-self::*[contains(@class, ' bookmap/appendix ')] and                         $e:number-levels[$depth]"><xsl:number count="*[contains(@class, ' map/topicref ')]                               [ancestor-or-self::*[contains(@class, ' bookmap/appendix ')]]" level="single" format="A"/></xsl:when><xsl:when test="$e:number-levels[$depth]"><xsl:variable name="res"><xsl:number count="*[contains(@class, ' map/topicref ')]                                    [not(ancestor-or-self::*[contains(@class, ' bookmap/frontmatter ')])]" level="multiple" format="1.1"/></xsl:variable><xsl:value-of select="tokenize($res, '\.')[1]"/></xsl:when></xsl:choose></xsl:template><xsl:template name="getNavTitle"><xsl:variable name="topicref" select="key('map-id', @id)[1]"/><xsl:choose><xsl:when test="$topicref/@locktitle = 'yes' and $topicref/*[contains(@class, ' map/topicmeta ')]/*[contains(@class, ' topic/navtitle ')]"><xsl:apply-templates select="$topicref/*[contains(@class, ' map/topicmeta ')]/*[contains(@class, ' topic/navtitle ')]/node()"/></xsl:when><xsl:when test="$topicref/@locktitle = 'yes' and $topicref/@navtitle"><xsl:value-of select="$topicref/@navtitle"/></xsl:when><xsl:when test="*[contains(@class,' topic/titlealts ')]/*[contains(@class,' topic/navtitle ')]"><xsl:apply-templates select="*[contains(@class,' topic/titlealts ')]/*[contains(@class,' topic/navtitle ')]/node()"/></xsl:when><xsl:otherwise><xsl:apply-templates select="*[contains(@class,' topic/title ')]/node()"/></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="*" mode="get-topic-level" as="xs:integer"><xsl:variable name="topicref" select="key('map-id', ancestor-or-self::*[contains(@class,' topic/topic ')][1]/@id)[1]" as="element()?"/><xsl:sequence select="count(ancestor-or-self::*[contains(@class,' topic/topic ')]) -                           count($topicref/ancestor-or-self::*[(contains(@class, ' bookmap/part ') and                                                                ((exists(@navtitle) or *[contains(@class,' map/topicmeta ')]/*[contains(@class,' topic/navtitle ')]) or                                                                 (exists(@href) and                                                                  (empty(@format) or @format eq 'dita') and                                                                  (empty(@scope) or @scope eq 'local')))) or                                                                (contains(@class, ' bookmap/chapter ') and                                                                ((exists(@navtitle) or *[contains(@class,' map/topicmeta ')]/*[contains(@class,' topic/navtitle ')]) or                                                                 (exists(@href) and                                                                  (empty(@format) or @format eq 'dita') and                                                                  (empty(@scope) or @scope eq 'local')))) or                                                                (contains(@class,' bookmap/appendices ') and                                                                exists(@href) and                                                                (empty(@format) or @format eq 'dita') and                                                                (empty(@scope) or @scope eq 'local'))])"/></xsl:template><xsl:template match="*[contains(@class,' topic/note ')]"><xsl:variable name="noteImagePath"/><xsl:variable name="atts" as="element()"><xsl:choose><xsl:when test="@type = 'note' or not(@type)"><wrapper xsl:use-attribute-sets="note__table__note"/></xsl:when><xsl:when test="@type = 'notice'"><wrapper xsl:use-attribute-sets="note__table__notice"/></xsl:when><xsl:when test="@type = 'tip'"><wrapper xsl:use-attribute-sets="note__table__tip"/></xsl:when><xsl:when test="@type = 'fastpath'"><wrapper xsl:use-attribute-sets="note__table__fastpath"/></xsl:when><xsl:when test="@type = 'restriction'"><wrapper xsl:use-attribute-sets="note__table__restriction"/></xsl:when><xsl:when test="@type = 'important'"><wrapper xsl:use-attribute-sets="note__table__important"/></xsl:when><xsl:when test="@type = 'remember'"><wrapper xsl:use-attribute-sets="note__table__remember"/></xsl:when><xsl:when test="@type = 'attention'"><wrapper xsl:use-attribute-sets="note__table__attention"/></xsl:when><xsl:when test="@type = 'caution'"><wrapper xsl:use-attribute-sets="note__table__caution"/></xsl:when><xsl:when test="@type = 'danger'"><wrapper xsl:use-attribute-sets="note__table__danger"/></xsl:when><xsl:when test="@type = 'warning'"><wrapper xsl:use-attribute-sets="note__table__warning"/></xsl:when><xsl:when test="@type = 'trouble'"><wrapper xsl:use-attribute-sets="note__table__trouble"/></xsl:when><xsl:when test="@type = 'other'"><wrapper xsl:use-attribute-sets="note__table__other"/></xsl:when></xsl:choose></xsl:variable><xsl:choose><xsl:when test="not($noteImagePath = '')"><fo:table><xsl:copy-of select="$atts/@*"/><fo:table-column xsl:use-attribute-sets="note__image__column"/><fo:table-column xsl:use-attribute-sets="note__text__column"/><fo:table-body><fo:table-row><fo:table-cell xsl:use-attribute-sets="note__image__entry"><fo:block><fo:external-graphic src="url('{concat($artworkPrefix, $noteImagePath)}')" xsl:use-attribute-sets="note__image"/></fo:block></fo:table-cell><fo:table-cell xsl:use-attribute-sets="note__text__entry"><xsl:apply-templates select="." mode="placeNoteContent"/></fo:table-cell></fo:table-row></fo:table-body></fo:table></xsl:when><xsl:otherwise><fo:block><xsl:copy-of select="$atts/@*"/><xsl:apply-templates select="." mode="placeNoteContent"/></fo:block></xsl:otherwise></xsl:choose></xsl:template><xsl:template match="*" mode="placeNoteContent"><fo:block xsl:use-attribute-sets="note"><xsl:call-template name="commonattributes"/><xsl:choose><xsl:when test="@type = 'note' or empty(@type)"><fo:inline xsl:use-attribute-sets="note__label__note"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-note-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'notice'"><fo:inline xsl:use-attribute-sets="note__label__notice"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-notice-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'tip'"><fo:inline xsl:use-attribute-sets="note__label__tip"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-tip-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'fastpath'"><fo:inline xsl:use-attribute-sets="note__label__fastpath"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-fastpath-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'restriction'"><fo:inline xsl:use-attribute-sets="note__label__restriction"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-restriction-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'important'"><fo:inline xsl:use-attribute-sets="note__label__important"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-important-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'remember'"><fo:inline xsl:use-attribute-sets="note__label__remember"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-remember-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'attention'"><fo:inline xsl:use-attribute-sets="note__label__attention"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-attention-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'caution'"><fo:inline xsl:use-attribute-sets="note__label__caution"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-caution-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'danger'"><fo:inline xsl:use-attribute-sets="note__label__danger"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-danger-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'warning'"><fo:inline xsl:use-attribute-sets="note__label__warning"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-warning-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'trouble'"><fo:inline xsl:use-attribute-sets="note__label__trouble"><xsl:call-template name="getVariable"><xsl:with-param name="id" select="'note-trouble-label'"/></xsl:call-template></fo:inline></xsl:when><xsl:when test="@type = 'other'"><fo:inline xsl:use-attribute-sets="note__label__other"><xsl:choose><xsl:when test="@othertype"><xsl:value-of select="@othertype"/></xsl:when><xsl:otherwise><xsl:text>[</xsl:text><xsl:value-of select="@type"/><xsl:text>]</xsl:text></xsl:otherwise></xsl:choose></fo:inline></xsl:when></xsl:choose><xsl:apply-templates/></fo:block></xsl:template></xsl:stylesheet>